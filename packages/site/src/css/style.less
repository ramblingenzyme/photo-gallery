body {
  font-family: "gg sans", "Noto Sans", "Helvetica Neue", Helvetica, Arial,
    sans-serif;

  margin: 0;
}

header {
  padding: 0.5rem;

  background: #222;
  color: white;
  top: 0;
  position: sticky;

  display: flex;
  justify-content: space-between;
  align-items: center;

  flex-direction: column;
  font-size: 1.25rem;

  @media screen and (min-width: 1000px) {
    flex-direction: row;
    font-size: 1rem;
  }

  h1 {
    justify-self: start;
    margin: 0;
    margin-left: 0.5rem;
  }

  div {
    margin-right: 0.5rem;
  }

  a:visited {
    color: white;
  }
}

main {
  margin-top: 10px;
}

#photo-popup {
  display: flex;
  flex-direction: column;

  max-width: max(85vw, 400px);
  padding: 0px;
  border: none;
  background-color: transparent;

  // these are transitioned using the `in` class.
  visibility: hidden;
  opacity: 0;

  transition: visibility 0.5s linear 0s, opacity 0.8s ease-in-out 0.2s;

  &::backdrop {
    background-color: rgba(0, 0, 0, 0.75);
    cursor: pointer;
  }

  &[open].in,
  &[open].in::backdrop {
    opacity: 1;
    visibility: visible;
  }

  .photo-wrapper {
    border: 10px solid white;
  }
}

#dialog-img {
  max-width: 100%;
  max-height: calc(90vh - 32px);
}

#open-orig {
  color: rgb(255, 255, 255);
  outline: none;
  text-decoration: none;
  font-size: 14px;
  font-weight: 500;
  height: 30px;

  opacity: 0.5;
  transition: opacity 0.15s ease;

  &:hover {
    opacity: 1;
    text-decoration: underline;
  }
}

.container {
  // variables
  --column-count: 2;
  --min-column-width: 250px;
  --column-gap: 10px;

  width: 90vw;
  margin: auto;

  // Applies to grid and flex
  gap: var(--column-gap) var(--column-gap);

  // Default to grid
  display: grid;

  grid-template-columns: repeat(
    var(--column-count),
    // Guarantees that columns don't become smaller than --min-column-width
    minmax(var(--min-column-width), 1fr)
  );
  grid-template-rows: masonry;
  masonry-auto-flow: pack;

  .photo-wrapper {
    cursor: pointer;
    margin: auto;
    width: 100%;
  }

  // Fallback to flexbox
  @supports not (grid-template-rows: masonry) {
    display: flex;
    flex-flow: row wrap;

    .photo-wrapper {
      flex: auto;
      height: 200px;

      width: unset;
      object-fit: contain;

      max-width: calc(
        // Numerator = available space 100% - gaps
          // Denominator = number of columns
          (100% - var(--column-count) * var(--column-gap)) / var(--column-count)
      );

      margin: 0;
    }
  }

  @media screen and (min-width: 850px) {
    --column-count: 3;
  }

  @media screen and (min-width: 1200px) {
    --column-count: 4;
  }

  @media screen and (min-width: 2000px) {
    --column-count: 5;
  }
}
